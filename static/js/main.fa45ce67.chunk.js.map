{"version":3,"sources":["components/Header/Header.jsx","redux/redux-store.js","components/CreateTracker/CreateTracker.jsx","components/Tracker/Tracker.jsx","components/Trackers/Trackers.jsx","App.js","reportWebVitals.js","index.js"],"names":["HeaderContainer","styled","header","Header","SET_NEW_TRACKER","REMOVE_TRACKER","START_TRACKER","STOP_TRACKER","initialState","trackers","localStorage","getItem","JSON","parse","removeTracker","index","type","store","createStore","state","action","stateCopy","name","startPoint","value","trackerOn","setItem","stringify","newStartPoint","splice","useStyles","makeStyles","root","marginBottom","display","alignItems","textAlign","width","border","borderRadius","input","marginLeft","flex","iconButton","margin","padding","color","fontSize","connect","setNewTracker","nameRef","useRef","useState","setValue","createTracker","e","Date","now","trackerName","moment","format","preventDefault","classes","Paper","onSubmit","className","component","InputBase","placeholder","inputProps","inputRef","onChange","current","IconButton","onClick","aria-label","justifyContent","minHeight","borderTop","box","minWidth","removeButton","activeStyle","backgroundColor","opacity","Control","div","TrackerName","Tracker","tracker","props","time","setTime","useEffect","timer","setInterval","clearInterval","Container","style","Box","Math","floor","duration","Number","asHours","stopTracker","startTracker","Section","section","undefined","length","map","v","i","toString","AppContainer","MainContent","main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa45ce67.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst HeaderContainer = styled.header`\r\n  font-size: xxx-large;\r\n  font-family: \"Arial Black\", serif ;\r\n`;\r\n\r\nconst Header = () => {\r\n    return <HeaderContainer>\r\n        tracker\r\n    </HeaderContainer>\r\n}\r\n\r\nexport default Header;","import {createStore} from \"redux\";\r\n\r\nconst SET_NEW_TRACKER = 'SET_NEW_TRACKER';\r\nconst REMOVE_TRACKER = 'REMOVE_TRACKER';\r\nconst START_TRACKER = 'START_TRACKER';\r\nconst STOP_TRACKER = 'STOP_TRACKER';\r\n\r\nlet initialState =\r\n    {\r\n        trackers: []\r\n    };\r\nif (localStorage.getItem('trackersState') !== null) {\r\n    initialState = {...JSON.parse(localStorage.getItem('trackersState'))}\r\n}\r\nexport const setNewTracker = (name, startPoint) => ({\r\n    type: SET_NEW_TRACKER,\r\n    name,\r\n    startPoint\r\n});\r\nexport const startTracker = (index, newStartPoint) => ({\r\n    type: START_TRACKER,\r\n    index,\r\n    newStartPoint\r\n});\r\nexport const stopTracker = (index, value) => ({\r\n    type: STOP_TRACKER,\r\n    index,\r\n    value\r\n});\r\nexport const removeTracker = (index = 0) => ({\r\n    type: REMOVE_TRACKER,\r\n    index\r\n});\r\n\r\nconst trackersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_NEW_TRACKER: {\r\n            const stateCopy = {\r\n                ...state,\r\n                trackers: [...state.trackers, {\r\n                    name: action.name,\r\n                    startPoint: action.startPoint,\r\n                    value: 0,\r\n                    trackerOn: true\r\n                }]\r\n            }\r\n            localStorage.setItem('trackersState', JSON.stringify(stateCopy));\r\n            return stateCopy;\r\n        }\r\n        case STOP_TRACKER: {\r\n            let trackers = [...state.trackers];\r\n            trackers[action.index] = {\r\n                ...trackers[action.index],\r\n                value: action.value,\r\n                trackerOn: false\r\n            }\r\n            const stateCopy = {\r\n                ...state,\r\n                trackers: trackers,\r\n            }\r\n            localStorage.setItem('trackersState', JSON.stringify(stateCopy));\r\n            return stateCopy;\r\n        }\r\n        case START_TRACKER: {\r\n            let trackers = [...state.trackers];\r\n            trackers[action.index] = {\r\n                ...trackers[action.index],\r\n                startPoint: action.newStartPoint,\r\n                trackerOn: true\r\n            }\r\n            const stateCopy = {\r\n                ...state,\r\n                trackers: trackers,\r\n            }\r\n            localStorage.setItem('trackersState', JSON.stringify(stateCopy));\r\n            return stateCopy;\r\n        }\r\n        case REMOVE_TRACKER: {\r\n            let trackers = [...state.trackers];\r\n            trackers.splice(action.index, 1);\r\n            const stateCopy = {\r\n                ...state,\r\n                trackers: trackers,\r\n            }\r\n            localStorage.setItem('trackersState', JSON.stringify(stateCopy));\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst store = createStore(trackersReducer);\r\n\r\nexport default store;\r\n","import Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayCircleFilledOutlinedIcon from '@material-ui/icons/PlayCircleFilledOutlined';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useRef, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setNewTracker} from \"../../redux/redux-store\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        marginBottom: '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        border: 'solid 1px gray',\r\n        borderRadius: 25,\r\n    },\r\n\r\n    input: {\r\n        marginLeft: 20,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        margin: 0,\r\n        padding: '0px',\r\n        color: 'green',\r\n        fontSize: 50,\r\n    },\r\n}));\r\n\r\nconst CreateTracker = ({setNewTracker}) => {\r\n    const nameRef = useRef(null);\r\n    const [value, setValue] = useState('');\r\n    const createTracker = (e) => {\r\n        const startPoint = Date.now();\r\n        const trackerName = (value === '') ? moment().format('MMMM Do YYYY, h:mm:ss a') : value;\r\n        setNewTracker(trackerName, startPoint);\r\n        setValue('');\r\n        e.preventDefault();\r\n    }\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper onSubmit={createTracker}\r\n               className={classes.root}\r\n               component=\"form\">\r\n            <InputBase className={classes.input}\r\n                       placeholder=\"Input tracker name\"\r\n                       inputProps={{'aria-label': 'Input tracker name'}}\r\n                       inputRef={nameRef}\r\n                       value={value}\r\n                       onChange={() => setValue(nameRef.current.value)}\r\n            />\r\n            <IconButton className={classes.iconButton}\r\n                        onClick={createTracker}\r\n                        aria-label=\"add tracker\">\r\n                <PlayCircleFilledOutlinedIcon fontSize=\"inherit\" color=\"inherit\"/>\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(() => {\r\n}, {setNewTracker})(CreateTracker);","import {useEffect, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\n\r\nimport {Box, Container, makeStyles} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        justifyContent: 'space-between',\r\n        width: '100%',\r\n        minHeight: '60px',\r\n        borderTop: 'solid 1px gray',\r\n\r\n    },\r\n    box: {\r\n        minWidth: '80px',\r\n    },\r\n    iconButton: {\r\n        margin: 0,\r\n        padding: '0px',\r\n        color: 'black',\r\n        fontSize: 30,\r\n    },\r\n    removeButton: {\r\n        color: 'red',\r\n    },\r\n}));\r\nconst activeStyle = {\r\n    color: 'green',\r\n    backgroundColor: 'lightyellow',\r\n    opacity: 0.8\r\n}\r\nconst Control = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\nconst TrackerName = styled.div`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 80%;\r\n`;\r\n\r\nconst Tracker = ({tracker: {name, startPoint, value, trackerOn}, index, ...props}) => {\r\n    const [time, setTime] = useState(value);\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if (!trackerOn) return;\r\n        const timer = setInterval(() => {\r\n            setTime((Date.now() - startPoint) + value);\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n\r\n    }, [time, startPoint, value, trackerOn]);\r\n    const start = () => {\r\n        props.startTracker(index, Date.now());\r\n    }\r\n    const stop = () => {\r\n        props.stopTracker(index, time);\r\n    }\r\n    return (\r\n        <section>\r\n            <Container className={classes.root} style={trackerOn ? activeStyle : {}}>\r\n                <TrackerName>\r\n                    {name}\r\n                </TrackerName>\r\n                <Box className={classes.box}>\r\n                    <div>\r\n                        {`${Math.floor(moment.duration(Number(time)).asHours())}\r\n                        : ${moment(Number(time)).format(\"mm\")}\r\n                        : ${moment(Number(time)).format(\"ss\")}`}\r\n                    </div>\r\n                    <Control>\r\n                        {!trackerOn\r\n                            ? <IconButton onClick={start}\r\n                                          className={classes.iconButton}\r\n                                          aria-label=\"Start tracker\">\r\n                                <PlayCircleOutlineIcon fontSize=\"inherit\" color=\"inherit\"/>\r\n                            </IconButton>\r\n                            : <IconButton onClick={stop}\r\n                                          className={classes.iconButton}\r\n                                          aria-label=\"Stop tracker\">\r\n                                <PauseCircleOutlineIcon fontSize=\"inherit\" color=\"inherit\"/>\r\n                            </IconButton>}\r\n                        <IconButton onClick={() => props.removeTracker(index)}\r\n                                    className={classes.iconButton}\r\n                                    aria-label=\"Delete tracker\">\r\n                            <RemoveIcon fontSize=\"inherit\" className={classes.removeButton}/>\r\n                        </IconButton>\r\n                    </Control>\r\n                </Box>\r\n            </Container>\r\n        </section>);\r\n}\r\n\r\nexport default Tracker;","import Tracker from \"../Tracker/Tracker\";\r\nimport {connect} from \"react-redux\";\r\nimport {removeTracker, startTracker, stopTracker} from \"../../redux/redux-store\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  max-height: 80vh;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst Trackers = ({trackers, ...props}) =>{\r\n    return <Section>\r\n        {((trackers !== undefined) && (trackers.length > 0))\r\n        && trackers.map((v,i) => <Tracker tracker={v}\r\n                                          index={i} key={v.startPoint.toString()}\r\n                                          removeTracker={removeTracker}\r\n                                          {...props}\r\n                                          />)}\r\n    </Section>\r\n}\r\n\r\nexport default connect((state) => ({\r\n    trackers: state.trackers,\r\n}),{\r\n    removeTracker,\r\n    startTracker,\r\n    stopTracker\r\n})(Trackers);","import Header from \"./components/Header/Header\";\nimport CreateTracker from \"./components/CreateTracker/CreateTracker\";\nimport styled from \"styled-components\";\nimport Trackers from \"./components/Trackers/Trackers\";\n\nconst AppContainer = styled.div`\n    height: 100vh;\n    text-align: center;\n    display: flex;\n    gap: 40px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst MainContent = styled.main`\n  width: 90%;\n  @media  (min-width: 560px) {\n    width: 560px;\n  }\n`;\n\n\nfunction App() {\n\n  return (\n    <AppContainer>\n      <Header />\n      <MainContent>\n          <CreateTracker />\n          <Trackers />\n      </MainContent>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/redux-store\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}